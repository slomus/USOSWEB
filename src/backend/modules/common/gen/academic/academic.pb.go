// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v6.32.0
// source: academic.proto

package academic

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TimeSlot struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DayOfWeek     string                 `protobuf:"bytes,1,opt,name=day_of_week,json=dayOfWeek,proto3" json:"day_of_week,omitempty"`
	StartTime     string                 `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       string                 `protobuf:"bytes,3,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Classroom     int32                  `protobuf:"varint,4,opt,name=classroom,proto3" json:"classroom,omitempty"`
	BuildingName  string                 `protobuf:"bytes,5,opt,name=building_name,json=buildingName,proto3" json:"building_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TimeSlot) Reset() {
	*x = TimeSlot{}
	mi := &file_academic_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TimeSlot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeSlot) ProtoMessage() {}

func (x *TimeSlot) ProtoReflect() protoreflect.Message {
	mi := &file_academic_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeSlot.ProtoReflect.Descriptor instead.
func (*TimeSlot) Descriptor() ([]byte, []int) {
	return file_academic_proto_rawDescGZIP(), []int{0}
}

func (x *TimeSlot) GetDayOfWeek() string {
	if x != nil {
		return x.DayOfWeek
	}
	return ""
}

func (x *TimeSlot) GetStartTime() string {
	if x != nil {
		return x.StartTime
	}
	return ""
}

func (x *TimeSlot) GetEndTime() string {
	if x != nil {
		return x.EndTime
	}
	return ""
}

func (x *TimeSlot) GetClassroom() int32 {
	if x != nil {
		return x.Classroom
	}
	return 0
}

func (x *TimeSlot) GetBuildingName() string {
	if x != nil {
		return x.BuildingName
	}
	return ""
}

type ClassInfo struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ClassId         int32                  `protobuf:"varint,1,opt,name=class_id,json=classId,proto3" json:"class_id,omitempty"`
	ClassType       string                 `protobuf:"bytes,2,opt,name=class_type,json=classType,proto3" json:"class_type,omitempty"`
	GroupNr         int32                  `protobuf:"varint,3,opt,name=group_nr,json=groupNr,proto3" json:"group_nr,omitempty"`
	CurrentCapacity int32                  `protobuf:"varint,4,opt,name=current_capacity,json=currentCapacity,proto3" json:"current_capacity,omitempty"`
	Capacity        int32                  `protobuf:"varint,5,opt,name=capacity,proto3" json:"capacity,omitempty"`
	AvailableSpots  int32                  `protobuf:"varint,6,opt,name=available_spots,json=availableSpots,proto3" json:"available_spots,omitempty"`
	Schedule        []*TimeSlot            `protobuf:"bytes,7,rep,name=schedule,proto3" json:"schedule,omitempty"`
	Instructors     []string               `protobuf:"bytes,8,rep,name=instructors,proto3" json:"instructors,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ClassInfo) Reset() {
	*x = ClassInfo{}
	mi := &file_academic_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClassInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClassInfo) ProtoMessage() {}

func (x *ClassInfo) ProtoReflect() protoreflect.Message {
	mi := &file_academic_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClassInfo.ProtoReflect.Descriptor instead.
func (*ClassInfo) Descriptor() ([]byte, []int) {
	return file_academic_proto_rawDescGZIP(), []int{1}
}

func (x *ClassInfo) GetClassId() int32 {
	if x != nil {
		return x.ClassId
	}
	return 0
}

func (x *ClassInfo) GetClassType() string {
	if x != nil {
		return x.ClassType
	}
	return ""
}

func (x *ClassInfo) GetGroupNr() int32 {
	if x != nil {
		return x.GroupNr
	}
	return 0
}

func (x *ClassInfo) GetCurrentCapacity() int32 {
	if x != nil {
		return x.CurrentCapacity
	}
	return 0
}

func (x *ClassInfo) GetCapacity() int32 {
	if x != nil {
		return x.Capacity
	}
	return 0
}

func (x *ClassInfo) GetAvailableSpots() int32 {
	if x != nil {
		return x.AvailableSpots
	}
	return 0
}

func (x *ClassInfo) GetSchedule() []*TimeSlot {
	if x != nil {
		return x.Schedule
	}
	return nil
}

func (x *ClassInfo) GetInstructors() []string {
	if x != nil {
		return x.Instructors
	}
	return nil
}

type RegistrationPeriod struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StartDate     string                 `protobuf:"bytes,1,opt,name=start_date,json=startDate,proto3" json:"start_date,omitempty"`
	EndDate       string                 `protobuf:"bytes,2,opt,name=end_date,json=endDate,proto3" json:"end_date,omitempty"`
	IsActive      bool                   `protobuf:"varint,3,opt,name=is_active,json=isActive,proto3" json:"is_active,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RegistrationPeriod) Reset() {
	*x = RegistrationPeriod{}
	mi := &file_academic_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegistrationPeriod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegistrationPeriod) ProtoMessage() {}

func (x *RegistrationPeriod) ProtoReflect() protoreflect.Message {
	mi := &file_academic_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegistrationPeriod.ProtoReflect.Descriptor instead.
func (*RegistrationPeriod) Descriptor() ([]byte, []int) {
	return file_academic_proto_rawDescGZIP(), []int{2}
}

func (x *RegistrationPeriod) GetStartDate() string {
	if x != nil {
		return x.StartDate
	}
	return ""
}

func (x *RegistrationPeriod) GetEndDate() string {
	if x != nil {
		return x.EndDate
	}
	return ""
}

func (x *RegistrationPeriod) GetIsActive() bool {
	if x != nil {
		return x.IsActive
	}
	return false
}

type SubjectSummary struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	SubjectId          int32                  `protobuf:"varint,1,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
	Alias              string                 `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	Name               string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Ects               float32                `protobuf:"fixed32,4,opt,name=ects,proto3" json:"ects,omitempty"`
	TotalCapacity      int32                  `protobuf:"varint,5,opt,name=total_capacity,json=totalCapacity,proto3" json:"total_capacity,omitempty"`
	TotalEnrolled      int32                  `protobuf:"varint,6,opt,name=total_enrolled,json=totalEnrolled,proto3" json:"total_enrolled,omitempty"`
	AvailableSpots     int32                  `protobuf:"varint,7,opt,name=available_spots,json=availableSpots,proto3" json:"available_spots,omitempty"`
	IsEnrolled         bool                   `protobuf:"varint,8,opt,name=is_enrolled,json=isEnrolled,proto3" json:"is_enrolled,omitempty"`
	RegistrationPeriod *RegistrationPeriod    `protobuf:"bytes,9,opt,name=registration_period,json=registrationPeriod,proto3" json:"registration_period,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SubjectSummary) Reset() {
	*x = SubjectSummary{}
	mi := &file_academic_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubjectSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubjectSummary) ProtoMessage() {}

func (x *SubjectSummary) ProtoReflect() protoreflect.Message {
	mi := &file_academic_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubjectSummary.ProtoReflect.Descriptor instead.
func (*SubjectSummary) Descriptor() ([]byte, []int) {
	return file_academic_proto_rawDescGZIP(), []int{3}
}

func (x *SubjectSummary) GetSubjectId() int32 {
	if x != nil {
		return x.SubjectId
	}
	return 0
}

func (x *SubjectSummary) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *SubjectSummary) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SubjectSummary) GetEcts() float32 {
	if x != nil {
		return x.Ects
	}
	return 0
}

func (x *SubjectSummary) GetTotalCapacity() int32 {
	if x != nil {
		return x.TotalCapacity
	}
	return 0
}

func (x *SubjectSummary) GetTotalEnrolled() int32 {
	if x != nil {
		return x.TotalEnrolled
	}
	return 0
}

func (x *SubjectSummary) GetAvailableSpots() int32 {
	if x != nil {
		return x.AvailableSpots
	}
	return 0
}

func (x *SubjectSummary) GetIsEnrolled() bool {
	if x != nil {
		return x.IsEnrolled
	}
	return false
}

func (x *SubjectSummary) GetRegistrationPeriod() *RegistrationPeriod {
	if x != nil {
		return x.RegistrationPeriod
	}
	return nil
}

type SubjectDetails struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	SubjectId          int32                  `protobuf:"varint,1,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
	Alias              string                 `protobuf:"bytes,2,opt,name=alias,proto3" json:"alias,omitempty"`
	Name               string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Ects               float32                `protobuf:"fixed32,4,opt,name=ects,proto3" json:"ects,omitempty"`
	Description        string                 `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	Syllabus           string                 `protobuf:"bytes,6,opt,name=syllabus,proto3" json:"syllabus,omitempty"`
	Classes            []*ClassInfo           `protobuf:"bytes,7,rep,name=classes,proto3" json:"classes,omitempty"`
	RegistrationPeriod *RegistrationPeriod    `protobuf:"bytes,8,opt,name=registration_period,json=registrationPeriod,proto3" json:"registration_period,omitempty"`
	IsEnrolled         bool                   `protobuf:"varint,9,opt,name=is_enrolled,json=isEnrolled,proto3" json:"is_enrolled,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SubjectDetails) Reset() {
	*x = SubjectDetails{}
	mi := &file_academic_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubjectDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubjectDetails) ProtoMessage() {}

func (x *SubjectDetails) ProtoReflect() protoreflect.Message {
	mi := &file_academic_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubjectDetails.ProtoReflect.Descriptor instead.
func (*SubjectDetails) Descriptor() ([]byte, []int) {
	return file_academic_proto_rawDescGZIP(), []int{4}
}

func (x *SubjectDetails) GetSubjectId() int32 {
	if x != nil {
		return x.SubjectId
	}
	return 0
}

func (x *SubjectDetails) GetAlias() string {
	if x != nil {
		return x.Alias
	}
	return ""
}

func (x *SubjectDetails) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SubjectDetails) GetEcts() float32 {
	if x != nil {
		return x.Ects
	}
	return 0
}

func (x *SubjectDetails) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *SubjectDetails) GetSyllabus() string {
	if x != nil {
		return x.Syllabus
	}
	return ""
}

func (x *SubjectDetails) GetClasses() []*ClassInfo {
	if x != nil {
		return x.Classes
	}
	return nil
}

func (x *SubjectDetails) GetRegistrationPeriod() *RegistrationPeriod {
	if x != nil {
		return x.RegistrationPeriod
	}
	return nil
}

func (x *SubjectDetails) GetIsEnrolled() bool {
	if x != nil {
		return x.IsEnrolled
	}
	return false
}

type GetSubjectsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CourseId      *int32                 `protobuf:"varint,1,opt,name=course_id,json=courseId,proto3,oneof" json:"course_id,omitempty"`
	Semester      *int32                 `protobuf:"varint,2,opt,name=semester,proto3,oneof" json:"semester,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSubjectsRequest) Reset() {
	*x = GetSubjectsRequest{}
	mi := &file_academic_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubjectsRequest) ProtoMessage() {}

func (x *GetSubjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_academic_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubjectsRequest.ProtoReflect.Descriptor instead.
func (*GetSubjectsRequest) Descriptor() ([]byte, []int) {
	return file_academic_proto_rawDescGZIP(), []int{5}
}

func (x *GetSubjectsRequest) GetCourseId() int32 {
	if x != nil && x.CourseId != nil {
		return *x.CourseId
	}
	return 0
}

func (x *GetSubjectsRequest) GetSemester() int32 {
	if x != nil && x.Semester != nil {
		return *x.Semester
	}
	return 0
}

type GetSubjectsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Subjects      []*SubjectSummary      `protobuf:"bytes,1,rep,name=subjects,proto3" json:"subjects,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSubjectsResponse) Reset() {
	*x = GetSubjectsResponse{}
	mi := &file_academic_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubjectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubjectsResponse) ProtoMessage() {}

func (x *GetSubjectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_academic_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubjectsResponse.ProtoReflect.Descriptor instead.
func (*GetSubjectsResponse) Descriptor() ([]byte, []int) {
	return file_academic_proto_rawDescGZIP(), []int{6}
}

func (x *GetSubjectsResponse) GetSubjects() []*SubjectSummary {
	if x != nil {
		return x.Subjects
	}
	return nil
}

func (x *GetSubjectsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetSubjectDetailsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SubjectId     int32                  `protobuf:"varint,1,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSubjectDetailsRequest) Reset() {
	*x = GetSubjectDetailsRequest{}
	mi := &file_academic_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubjectDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubjectDetailsRequest) ProtoMessage() {}

func (x *GetSubjectDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_academic_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubjectDetailsRequest.ProtoReflect.Descriptor instead.
func (*GetSubjectDetailsRequest) Descriptor() ([]byte, []int) {
	return file_academic_proto_rawDescGZIP(), []int{7}
}

func (x *GetSubjectDetailsRequest) GetSubjectId() int32 {
	if x != nil {
		return x.SubjectId
	}
	return 0
}

type GetSubjectDetailsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Subject       *SubjectDetails        `protobuf:"bytes,1,opt,name=subject,proto3" json:"subject,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetSubjectDetailsResponse) Reset() {
	*x = GetSubjectDetailsResponse{}
	mi := &file_academic_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetSubjectDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSubjectDetailsResponse) ProtoMessage() {}

func (x *GetSubjectDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_academic_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSubjectDetailsResponse.ProtoReflect.Descriptor instead.
func (*GetSubjectDetailsResponse) Descriptor() ([]byte, []int) {
	return file_academic_proto_rawDescGZIP(), []int{8}
}

func (x *GetSubjectDetailsResponse) GetSubject() *SubjectDetails {
	if x != nil {
		return x.Subject
	}
	return nil
}

func (x *GetSubjectDetailsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Enrollment struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	SubjectId       int32                  `protobuf:"varint,1,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
	SubjectName     string                 `protobuf:"bytes,2,opt,name=subject_name,json=subjectName,proto3" json:"subject_name,omitempty"`
	EnrolledClasses []*ClassInfo           `protobuf:"bytes,3,rep,name=enrolled_classes,json=enrolledClasses,proto3" json:"enrolled_classes,omitempty"`
	EnrolledAt      *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=enrolled_at,json=enrolledAt,proto3" json:"enrolled_at,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Enrollment) Reset() {
	*x = Enrollment{}
	mi := &file_academic_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Enrollment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Enrollment) ProtoMessage() {}

func (x *Enrollment) ProtoReflect() protoreflect.Message {
	mi := &file_academic_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Enrollment.ProtoReflect.Descriptor instead.
func (*Enrollment) Descriptor() ([]byte, []int) {
	return file_academic_proto_rawDescGZIP(), []int{9}
}

func (x *Enrollment) GetSubjectId() int32 {
	if x != nil {
		return x.SubjectId
	}
	return 0
}

func (x *Enrollment) GetSubjectName() string {
	if x != nil {
		return x.SubjectName
	}
	return ""
}

func (x *Enrollment) GetEnrolledClasses() []*ClassInfo {
	if x != nil {
		return x.EnrolledClasses
	}
	return nil
}

func (x *Enrollment) GetEnrolledAt() *timestamppb.Timestamp {
	if x != nil {
		return x.EnrolledAt
	}
	return nil
}

type EnrollSubjectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SubjectId     int32                  `protobuf:"varint,1,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
	ClassIds      []int32                `protobuf:"varint,2,rep,packed,name=class_ids,json=classIds,proto3" json:"class_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnrollSubjectRequest) Reset() {
	*x = EnrollSubjectRequest{}
	mi := &file_academic_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnrollSubjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnrollSubjectRequest) ProtoMessage() {}

func (x *EnrollSubjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_academic_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnrollSubjectRequest.ProtoReflect.Descriptor instead.
func (*EnrollSubjectRequest) Descriptor() ([]byte, []int) {
	return file_academic_proto_rawDescGZIP(), []int{10}
}

func (x *EnrollSubjectRequest) GetSubjectId() int32 {
	if x != nil {
		return x.SubjectId
	}
	return 0
}

func (x *EnrollSubjectRequest) GetClassIds() []int32 {
	if x != nil {
		return x.ClassIds
	}
	return nil
}

type EnrollSubjectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Enrollment    *Enrollment            `protobuf:"bytes,3,opt,name=enrollment,proto3" json:"enrollment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnrollSubjectResponse) Reset() {
	*x = EnrollSubjectResponse{}
	mi := &file_academic_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnrollSubjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnrollSubjectResponse) ProtoMessage() {}

func (x *EnrollSubjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_academic_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnrollSubjectResponse.ProtoReflect.Descriptor instead.
func (*EnrollSubjectResponse) Descriptor() ([]byte, []int) {
	return file_academic_proto_rawDescGZIP(), []int{11}
}

func (x *EnrollSubjectResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *EnrollSubjectResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *EnrollSubjectResponse) GetEnrollment() *Enrollment {
	if x != nil {
		return x.Enrollment
	}
	return nil
}

type UnenrollSubjectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SubjectId     int32                  `protobuf:"varint,1,opt,name=subject_id,json=subjectId,proto3" json:"subject_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnenrollSubjectRequest) Reset() {
	*x = UnenrollSubjectRequest{}
	mi := &file_academic_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnenrollSubjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnenrollSubjectRequest) ProtoMessage() {}

func (x *UnenrollSubjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_academic_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnenrollSubjectRequest.ProtoReflect.Descriptor instead.
func (*UnenrollSubjectRequest) Descriptor() ([]byte, []int) {
	return file_academic_proto_rawDescGZIP(), []int{12}
}

func (x *UnenrollSubjectRequest) GetSubjectId() int32 {
	if x != nil {
		return x.SubjectId
	}
	return 0
}

type UnenrollSubjectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnenrollSubjectResponse) Reset() {
	*x = UnenrollSubjectResponse{}
	mi := &file_academic_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnenrollSubjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnenrollSubjectResponse) ProtoMessage() {}

func (x *UnenrollSubjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_academic_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnenrollSubjectResponse.ProtoReflect.Descriptor instead.
func (*UnenrollSubjectResponse) Descriptor() ([]byte, []int) {
	return file_academic_proto_rawDescGZIP(), []int{13}
}

func (x *UnenrollSubjectResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UnenrollSubjectResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetMyEnrollmentsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMyEnrollmentsRequest) Reset() {
	*x = GetMyEnrollmentsRequest{}
	mi := &file_academic_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMyEnrollmentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyEnrollmentsRequest) ProtoMessage() {}

func (x *GetMyEnrollmentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_academic_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyEnrollmentsRequest.ProtoReflect.Descriptor instead.
func (*GetMyEnrollmentsRequest) Descriptor() ([]byte, []int) {
	return file_academic_proto_rawDescGZIP(), []int{14}
}

type GetMyEnrollmentsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Enrollments   []*Enrollment          `protobuf:"bytes,1,rep,name=enrollments,proto3" json:"enrollments,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetMyEnrollmentsResponse) Reset() {
	*x = GetMyEnrollmentsResponse{}
	mi := &file_academic_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetMyEnrollmentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyEnrollmentsResponse) ProtoMessage() {}

func (x *GetMyEnrollmentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_academic_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyEnrollmentsResponse.ProtoReflect.Descriptor instead.
func (*GetMyEnrollmentsResponse) Descriptor() ([]byte, []int) {
	return file_academic_proto_rawDescGZIP(), []int{15}
}

func (x *GetMyEnrollmentsResponse) GetEnrollments() []*Enrollment {
	if x != nil {
		return x.Enrollments
	}
	return nil
}

func (x *GetMyEnrollmentsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CheckScheduleConflictsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClassIds      []int32                `protobuf:"varint,1,rep,packed,name=class_ids,json=classIds,proto3" json:"class_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckScheduleConflictsRequest) Reset() {
	*x = CheckScheduleConflictsRequest{}
	mi := &file_academic_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckScheduleConflictsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckScheduleConflictsRequest) ProtoMessage() {}

func (x *CheckScheduleConflictsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_academic_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckScheduleConflictsRequest.ProtoReflect.Descriptor instead.
func (*CheckScheduleConflictsRequest) Descriptor() ([]byte, []int) {
	return file_academic_proto_rawDescGZIP(), []int{16}
}

func (x *CheckScheduleConflictsRequest) GetClassIds() []int32 {
	if x != nil {
		return x.ClassIds
	}
	return nil
}

type ScheduleConflict struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ClassId_1       int32                  `protobuf:"varint,1,opt,name=class_id_1,json=classId1,proto3" json:"class_id_1,omitempty"`
	ClassId_2       int32                  `protobuf:"varint,2,opt,name=class_id_2,json=classId2,proto3" json:"class_id_2,omitempty"`
	SubjectName_1   string                 `protobuf:"bytes,3,opt,name=subject_name_1,json=subjectName1,proto3" json:"subject_name_1,omitempty"`
	SubjectName_2   string                 `protobuf:"bytes,4,opt,name=subject_name_2,json=subjectName2,proto3" json:"subject_name_2,omitempty"`
	ConflictingTime *TimeSlot              `protobuf:"bytes,5,opt,name=conflicting_time,json=conflictingTime,proto3" json:"conflicting_time,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ScheduleConflict) Reset() {
	*x = ScheduleConflict{}
	mi := &file_academic_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduleConflict) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduleConflict) ProtoMessage() {}

func (x *ScheduleConflict) ProtoReflect() protoreflect.Message {
	mi := &file_academic_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduleConflict.ProtoReflect.Descriptor instead.
func (*ScheduleConflict) Descriptor() ([]byte, []int) {
	return file_academic_proto_rawDescGZIP(), []int{17}
}

func (x *ScheduleConflict) GetClassId_1() int32 {
	if x != nil {
		return x.ClassId_1
	}
	return 0
}

func (x *ScheduleConflict) GetClassId_2() int32 {
	if x != nil {
		return x.ClassId_2
	}
	return 0
}

func (x *ScheduleConflict) GetSubjectName_1() string {
	if x != nil {
		return x.SubjectName_1
	}
	return ""
}

func (x *ScheduleConflict) GetSubjectName_2() string {
	if x != nil {
		return x.SubjectName_2
	}
	return ""
}

func (x *ScheduleConflict) GetConflictingTime() *TimeSlot {
	if x != nil {
		return x.ConflictingTime
	}
	return nil
}

type CheckScheduleConflictsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	HasConflicts  bool                   `protobuf:"varint,1,opt,name=has_conflicts,json=hasConflicts,proto3" json:"has_conflicts,omitempty"`
	Conflicts     []*ScheduleConflict    `protobuf:"bytes,2,rep,name=conflicts,proto3" json:"conflicts,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CheckScheduleConflictsResponse) Reset() {
	*x = CheckScheduleConflictsResponse{}
	mi := &file_academic_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckScheduleConflictsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckScheduleConflictsResponse) ProtoMessage() {}

func (x *CheckScheduleConflictsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_academic_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckScheduleConflictsResponse.ProtoReflect.Descriptor instead.
func (*CheckScheduleConflictsResponse) Descriptor() ([]byte, []int) {
	return file_academic_proto_rawDescGZIP(), []int{18}
}

func (x *CheckScheduleConflictsResponse) GetHasConflicts() bool {
	if x != nil {
		return x.HasConflicts
	}
	return false
}

func (x *CheckScheduleConflictsResponse) GetConflicts() []*ScheduleConflict {
	if x != nil {
		return x.Conflicts
	}
	return nil
}

func (x *CheckScheduleConflictsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_academic_proto protoreflect.FileDescriptor

const file_academic_proto_rawDesc = "" +
	"\n" +
	"\x0eacademic.proto\x12\bacademic\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xa7\x01\n" +
	"\bTimeSlot\x12\x1e\n" +
	"\vday_of_week\x18\x01 \x01(\tR\tdayOfWeek\x12\x1d\n" +
	"\n" +
	"start_time\x18\x02 \x01(\tR\tstartTime\x12\x19\n" +
	"\bend_time\x18\x03 \x01(\tR\aendTime\x12\x1c\n" +
	"\tclassroom\x18\x04 \x01(\x05R\tclassroom\x12#\n" +
	"\rbuilding_name\x18\x05 \x01(\tR\fbuildingName\"\xa2\x02\n" +
	"\tClassInfo\x12\x19\n" +
	"\bclass_id\x18\x01 \x01(\x05R\aclassId\x12\x1d\n" +
	"\n" +
	"class_type\x18\x02 \x01(\tR\tclassType\x12\x19\n" +
	"\bgroup_nr\x18\x03 \x01(\x05R\agroupNr\x12)\n" +
	"\x10current_capacity\x18\x04 \x01(\x05R\x0fcurrentCapacity\x12\x1a\n" +
	"\bcapacity\x18\x05 \x01(\x05R\bcapacity\x12'\n" +
	"\x0favailable_spots\x18\x06 \x01(\x05R\x0eavailableSpots\x12.\n" +
	"\bschedule\x18\a \x03(\v2\x12.academic.TimeSlotR\bschedule\x12 \n" +
	"\vinstructors\x18\b \x03(\tR\vinstructors\"k\n" +
	"\x12RegistrationPeriod\x12\x1d\n" +
	"\n" +
	"start_date\x18\x01 \x01(\tR\tstartDate\x12\x19\n" +
	"\bend_date\x18\x02 \x01(\tR\aendDate\x12\x1b\n" +
	"\tis_active\x18\x03 \x01(\bR\bisActive\"\xd4\x02\n" +
	"\x0eSubjectSummary\x12\x1d\n" +
	"\n" +
	"subject_id\x18\x01 \x01(\x05R\tsubjectId\x12\x14\n" +
	"\x05alias\x18\x02 \x01(\tR\x05alias\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x12\n" +
	"\x04ects\x18\x04 \x01(\x02R\x04ects\x12%\n" +
	"\x0etotal_capacity\x18\x05 \x01(\x05R\rtotalCapacity\x12%\n" +
	"\x0etotal_enrolled\x18\x06 \x01(\x05R\rtotalEnrolled\x12'\n" +
	"\x0favailable_spots\x18\a \x01(\x05R\x0eavailableSpots\x12\x1f\n" +
	"\vis_enrolled\x18\b \x01(\bR\n" +
	"isEnrolled\x12M\n" +
	"\x13registration_period\x18\t \x01(\v2\x1c.academic.RegistrationPeriodR\x12registrationPeriod\"\xca\x02\n" +
	"\x0eSubjectDetails\x12\x1d\n" +
	"\n" +
	"subject_id\x18\x01 \x01(\x05R\tsubjectId\x12\x14\n" +
	"\x05alias\x18\x02 \x01(\tR\x05alias\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x12\n" +
	"\x04ects\x18\x04 \x01(\x02R\x04ects\x12 \n" +
	"\vdescription\x18\x05 \x01(\tR\vdescription\x12\x1a\n" +
	"\bsyllabus\x18\x06 \x01(\tR\bsyllabus\x12-\n" +
	"\aclasses\x18\a \x03(\v2\x13.academic.ClassInfoR\aclasses\x12M\n" +
	"\x13registration_period\x18\b \x01(\v2\x1c.academic.RegistrationPeriodR\x12registrationPeriod\x12\x1f\n" +
	"\vis_enrolled\x18\t \x01(\bR\n" +
	"isEnrolled\"r\n" +
	"\x12GetSubjectsRequest\x12 \n" +
	"\tcourse_id\x18\x01 \x01(\x05H\x00R\bcourseId\x88\x01\x01\x12\x1f\n" +
	"\bsemester\x18\x02 \x01(\x05H\x01R\bsemester\x88\x01\x01B\f\n" +
	"\n" +
	"_course_idB\v\n" +
	"\t_semester\"e\n" +
	"\x13GetSubjectsResponse\x124\n" +
	"\bsubjects\x18\x01 \x03(\v2\x18.academic.SubjectSummaryR\bsubjects\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"9\n" +
	"\x18GetSubjectDetailsRequest\x12\x1d\n" +
	"\n" +
	"subject_id\x18\x01 \x01(\x05R\tsubjectId\"i\n" +
	"\x19GetSubjectDetailsResponse\x122\n" +
	"\asubject\x18\x01 \x01(\v2\x18.academic.SubjectDetailsR\asubject\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xcb\x01\n" +
	"\n" +
	"Enrollment\x12\x1d\n" +
	"\n" +
	"subject_id\x18\x01 \x01(\x05R\tsubjectId\x12!\n" +
	"\fsubject_name\x18\x02 \x01(\tR\vsubjectName\x12>\n" +
	"\x10enrolled_classes\x18\x03 \x03(\v2\x13.academic.ClassInfoR\x0fenrolledClasses\x12;\n" +
	"\venrolled_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"enrolledAt\"R\n" +
	"\x14EnrollSubjectRequest\x12\x1d\n" +
	"\n" +
	"subject_id\x18\x01 \x01(\x05R\tsubjectId\x12\x1b\n" +
	"\tclass_ids\x18\x02 \x03(\x05R\bclassIds\"\x81\x01\n" +
	"\x15EnrollSubjectResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x124\n" +
	"\n" +
	"enrollment\x18\x03 \x01(\v2\x14.academic.EnrollmentR\n" +
	"enrollment\"7\n" +
	"\x16UnenrollSubjectRequest\x12\x1d\n" +
	"\n" +
	"subject_id\x18\x01 \x01(\x05R\tsubjectId\"M\n" +
	"\x17UnenrollSubjectResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x19\n" +
	"\x17GetMyEnrollmentsRequest\"l\n" +
	"\x18GetMyEnrollmentsResponse\x126\n" +
	"\venrollments\x18\x01 \x03(\v2\x14.academic.EnrollmentR\venrollments\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"<\n" +
	"\x1dCheckScheduleConflictsRequest\x12\x1b\n" +
	"\tclass_ids\x18\x01 \x03(\x05R\bclassIds\"\xd9\x01\n" +
	"\x10ScheduleConflict\x12\x1c\n" +
	"\n" +
	"class_id_1\x18\x01 \x01(\x05R\bclassId1\x12\x1c\n" +
	"\n" +
	"class_id_2\x18\x02 \x01(\x05R\bclassId2\x12$\n" +
	"\x0esubject_name_1\x18\x03 \x01(\tR\fsubjectName1\x12$\n" +
	"\x0esubject_name_2\x18\x04 \x01(\tR\fsubjectName2\x12=\n" +
	"\x10conflicting_time\x18\x05 \x01(\v2\x12.academic.TimeSlotR\x0fconflictingTime\"\x99\x01\n" +
	"\x1eCheckScheduleConflictsResponse\x12#\n" +
	"\rhas_conflicts\x18\x01 \x01(\bR\fhasConflicts\x128\n" +
	"\tconflicts\x18\x02 \x03(\v2\x1a.academic.ScheduleConflictR\tconflicts\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage2\xf7\x01\n" +
	"\x0fSubjectsService\x12a\n" +
	"\vGetSubjects\x12\x1c.academic.GetSubjectsRequest\x1a\x1d.academic.GetSubjectsResponse\"\x15\x82\xd3\xe4\x93\x02\x0f\x12\r/api/subjects\x12\x80\x01\n" +
	"\x11GetSubjectDetails\x12\".academic.GetSubjectDetailsRequest\x1a#.academic.GetSubjectDetailsResponse\"\"\x82\xd3\xe4\x93\x02\x1c\x12\x1a/api/subjects/{subject_id}2\x92\x04\n" +
	"\x12EnrollmentsService\x12m\n" +
	"\rEnrollSubject\x12\x1e.academic.EnrollSubjectRequest\x1a\x1f.academic.EnrollSubjectResponse\"\x1b\x82\xd3\xe4\x93\x02\x15:\x01*\"\x10/api/enrollments\x12}\n" +
	"\x0fUnenrollSubject\x12 .academic.UnenrollSubjectRequest\x1a!.academic.UnenrollSubjectResponse\"%\x82\xd3\xe4\x93\x02\x1f*\x1d/api/enrollments/{subject_id}\x12s\n" +
	"\x10GetMyEnrollments\x12!.academic.GetMyEnrollmentsRequest\x1a\".academic.GetMyEnrollmentsResponse\"\x18\x82\xd3\xe4\x93\x02\x12\x12\x10/api/enrollments\x12\x98\x01\n" +
	"\x16CheckScheduleConflicts\x12'.academic.CheckScheduleConflictsRequest\x1a(.academic.CheckScheduleConflictsResponse\"+\x82\xd3\xe4\x93\x02%:\x01*\" /api/enrollments/check-conflictsBLZJgithub.com/slomus/USOSWEB/src/backend/modules/common/gen/academic;academicb\x06proto3"

var (
	file_academic_proto_rawDescOnce sync.Once
	file_academic_proto_rawDescData []byte
)

func file_academic_proto_rawDescGZIP() []byte {
	file_academic_proto_rawDescOnce.Do(func() {
		file_academic_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_academic_proto_rawDesc), len(file_academic_proto_rawDesc)))
	})
	return file_academic_proto_rawDescData
}

var file_academic_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_academic_proto_goTypes = []any{
	(*TimeSlot)(nil),                       // 0: academic.TimeSlot
	(*ClassInfo)(nil),                      // 1: academic.ClassInfo
	(*RegistrationPeriod)(nil),             // 2: academic.RegistrationPeriod
	(*SubjectSummary)(nil),                 // 3: academic.SubjectSummary
	(*SubjectDetails)(nil),                 // 4: academic.SubjectDetails
	(*GetSubjectsRequest)(nil),             // 5: academic.GetSubjectsRequest
	(*GetSubjectsResponse)(nil),            // 6: academic.GetSubjectsResponse
	(*GetSubjectDetailsRequest)(nil),       // 7: academic.GetSubjectDetailsRequest
	(*GetSubjectDetailsResponse)(nil),      // 8: academic.GetSubjectDetailsResponse
	(*Enrollment)(nil),                     // 9: academic.Enrollment
	(*EnrollSubjectRequest)(nil),           // 10: academic.EnrollSubjectRequest
	(*EnrollSubjectResponse)(nil),          // 11: academic.EnrollSubjectResponse
	(*UnenrollSubjectRequest)(nil),         // 12: academic.UnenrollSubjectRequest
	(*UnenrollSubjectResponse)(nil),        // 13: academic.UnenrollSubjectResponse
	(*GetMyEnrollmentsRequest)(nil),        // 14: academic.GetMyEnrollmentsRequest
	(*GetMyEnrollmentsResponse)(nil),       // 15: academic.GetMyEnrollmentsResponse
	(*CheckScheduleConflictsRequest)(nil),  // 16: academic.CheckScheduleConflictsRequest
	(*ScheduleConflict)(nil),               // 17: academic.ScheduleConflict
	(*CheckScheduleConflictsResponse)(nil), // 18: academic.CheckScheduleConflictsResponse
	(*timestamppb.Timestamp)(nil),          // 19: google.protobuf.Timestamp
}
var file_academic_proto_depIdxs = []int32{
	0,  // 0: academic.ClassInfo.schedule:type_name -> academic.TimeSlot
	2,  // 1: academic.SubjectSummary.registration_period:type_name -> academic.RegistrationPeriod
	1,  // 2: academic.SubjectDetails.classes:type_name -> academic.ClassInfo
	2,  // 3: academic.SubjectDetails.registration_period:type_name -> academic.RegistrationPeriod
	3,  // 4: academic.GetSubjectsResponse.subjects:type_name -> academic.SubjectSummary
	4,  // 5: academic.GetSubjectDetailsResponse.subject:type_name -> academic.SubjectDetails
	1,  // 6: academic.Enrollment.enrolled_classes:type_name -> academic.ClassInfo
	19, // 7: academic.Enrollment.enrolled_at:type_name -> google.protobuf.Timestamp
	9,  // 8: academic.EnrollSubjectResponse.enrollment:type_name -> academic.Enrollment
	9,  // 9: academic.GetMyEnrollmentsResponse.enrollments:type_name -> academic.Enrollment
	0,  // 10: academic.ScheduleConflict.conflicting_time:type_name -> academic.TimeSlot
	17, // 11: academic.CheckScheduleConflictsResponse.conflicts:type_name -> academic.ScheduleConflict
	5,  // 12: academic.SubjectsService.GetSubjects:input_type -> academic.GetSubjectsRequest
	7,  // 13: academic.SubjectsService.GetSubjectDetails:input_type -> academic.GetSubjectDetailsRequest
	10, // 14: academic.EnrollmentsService.EnrollSubject:input_type -> academic.EnrollSubjectRequest
	12, // 15: academic.EnrollmentsService.UnenrollSubject:input_type -> academic.UnenrollSubjectRequest
	14, // 16: academic.EnrollmentsService.GetMyEnrollments:input_type -> academic.GetMyEnrollmentsRequest
	16, // 17: academic.EnrollmentsService.CheckScheduleConflicts:input_type -> academic.CheckScheduleConflictsRequest
	6,  // 18: academic.SubjectsService.GetSubjects:output_type -> academic.GetSubjectsResponse
	8,  // 19: academic.SubjectsService.GetSubjectDetails:output_type -> academic.GetSubjectDetailsResponse
	11, // 20: academic.EnrollmentsService.EnrollSubject:output_type -> academic.EnrollSubjectResponse
	13, // 21: academic.EnrollmentsService.UnenrollSubject:output_type -> academic.UnenrollSubjectResponse
	15, // 22: academic.EnrollmentsService.GetMyEnrollments:output_type -> academic.GetMyEnrollmentsResponse
	18, // 23: academic.EnrollmentsService.CheckScheduleConflicts:output_type -> academic.CheckScheduleConflictsResponse
	18, // [18:24] is the sub-list for method output_type
	12, // [12:18] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_academic_proto_init() }
func file_academic_proto_init() {
	if File_academic_proto != nil {
		return
	}
	file_academic_proto_msgTypes[5].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_academic_proto_rawDesc), len(file_academic_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_academic_proto_goTypes,
		DependencyIndexes: file_academic_proto_depIdxs,
		MessageInfos:      file_academic_proto_msgTypes,
	}.Build()
	File_academic_proto = out.File
	file_academic_proto_goTypes = nil
	file_academic_proto_depIdxs = nil
}
